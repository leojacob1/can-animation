install.packages(c('httr', 'jsonlite'))
res <- GET('https://data.covidactnow.org/latest/states/CA.OBSERVED_INTERVENTION.timeseries.json')
library(httr)
library(jsonlite)
res <- GET('https://data.covidactnow.org/latest/states/CA.OBSERVED_INTERVENTION.timeseries.json')
res
res <- GET('https://data.covidactnow.org/latest/us/states/CA.OBSERVED_INTERVENTION.timeseries.json')
res
rawToChar(res$content)
View(res$content)
View(rawToChar(res$content))
data <- fromJSON(rawToChar(res$content))
View(data)
data <- fromJSON(rawToChar(res$content$date))
data <- fromJSON(rawToChar(res$content[3]))
setwd("~/CAN/data_scraper")
countyData <- read.csv('countyData.csv')
library(tidyverse)
sample <- countyData[1:20]
View(sample)
sample <- countyData %>% top_n(20)
sample <- countyData %>% slice_head(10)
install.packages('slice')
sample <- countyData %>% slice(10)
sample <- countyData[[1:20]]
countyData[1]
sample <- countyData %>% slice(head(row_numbe(), 10))
sample <- countyData %>% slice(head(row_number(), 10))
countyData <- sample %>%
select(fips, date, countyName, stateName, cumulativeInfected)
View(countyData)
countyData2 <- countyData %>%
filter(fips < 10000) %>%
mutate(fips = paste0("0", toString(fips)))
View(countyData2)
countyData2 <- countyData %>%
filter(fips < 10000) %>%
mutate(fips = paste0("0", fips))
View(countyData2)
countyData3 <- countyData %>%
filter(!(fips < 10000))
typeof(countyData$date)
countyData <- countyData %>% add_row(fips = 55555, date = as.Date("2020-03-20", format = "%Y-%m-%d"), countyName = "Marin County", cumulativeInfected = 69)
countyData2 <- countyData %>%
filter(fips < 10000) %>%
mutate(fips = paste0("0", fips))
countyData3 <- countyData %>%
filter(!(fips < 10000))
countyData3 <- countyData %>%
filter(!(fips < 10000)) %>%
mutate_if(is.integer, as.character)
typeof(countyData2$fips)
typeof(countyData3$fips)
countyData3 <- countyData %>%
filter(!(fips < 10000))
typeof(countyData3$fips)
as.character(55)
countyData3 <- countyData %>%
filter(!(fips < 10000)) %>%
mutate(fips = as.character(fips))
typeof(countyData3$fips)
countyDataMerged <- rbind(countyData2, countyData3)
View(countyDataMerged)
countyData <- read.csv('countyData.csv')
countyData <- countyData %>%
select(fips, date, countyName, stateName, cumulativeInfected)
countyData2 <- countyData %>%
filter(fips < 10000) %>%
mutate(fips = paste0("0", fips))
countyData3 <- countyData %>%
filter(!(fips < 10000)) %>%
mutate(fips = as.character(fips))
countyDataMerged <- rbind(countyData2, countyData3)
countyPops <- read.csv('countyPopulations.csv')
states <- c("Alabama",
"Alaska",
"Arizona",
"Arkansas",
"California",
"Colorado",
"Connecticut",
"Delaware",
"Florida",
"Georgia",
"Hawaii",
"Idaho",
"Illinois",
"Indiana",
"Iowa",
"Kansas",
"Kentucky",
"Louisiana",
"Maine",
"Maryland",
"Massachusetts",
"Michigan",
"Minnesota",
"Mississippi",
"Missouri",
"Montana",
"Nebraska",
"Nevada",
"New Hampshire",
"New Jersey",
"New Mexico",
"New York",
"North Carolina",
"North Dakota",
"Ohio",
"Oklahoma",
"Oregon",
"Pennsylvania",
"Rhode Island",
"South Carolina",
"South Dakota",
"Tennessee",
"Texas",
"Utah",
"Vermont",
"Virginia",
"Washington",
"West Virginia",
"Wisconsin",
"Wyoming")
countyPops <- countyPops %>%
filter(!(CTYNAME %in% states))
View(countyPops)
countyPops %>% filter(CTYNAME == "Marin County")
y <- countyPops %>% filter(CTYNAME == "Marin County")
y[1]
y[2]
y[2][1]
y[[2]]
countyDataWithPop <- countyDataMerged %>%
mutate(Population = filter(countyPops, CTYNAME == countyName)[[2]])
countyDataWithPop <- countyDataMerged %>%
mutate(Population = filter(countyPops, CTYNAME == "Marin County")[[2]])
View(countyDataWithPop)
countyDataWithPop <- countyDataMerged %>%
mutate(Population = filter(countyPops, CTYNAME == as.character(countyName))[[2]])
countyDataWithPop <- countyDataMerged %>%
mutate(Population = as.numeric(filter(countyPops, CTYNAME == countyName)[[2]]))
?with
setwd("~/Downloads")
library(tidyverse)
template <- read.csv('csvjson.csv')
template <- read.csv('csvjson.csv')
library(tidyverse)
library(jsonlite)
sample <- fromJSON("sampleJSON.json")
library(jsonlite)
sample <- fromJSON("sampleJSON.json")
sample <- stream_in(file("sampleJSON.json"))
setwd("~/CAN/data_scraper")
sample <- stream_in(file("sampleJSON.json"))
View(sample)
head(sample)
View(jsonlite::flatten(sample))
countyData <- read.csv('countyData.csv')
View(countyData)
setwd("~/CAN/animate")
countyData <- read.csv('countyData.csv')
View(countyData)
